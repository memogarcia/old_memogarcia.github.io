---
layout: post
title:  "Rsync"
date:   2015-06-09 21:01:00
categories: linux rsync
---

Rsync can almost completely replace cp and scp, furthermore interrupted transfers are efficiently restarted. A trailing slash (and the absence thereof) has different meanings, the man page is good... Here some examples:
Copy the directories with full content:


{% highlight bash %}

rsync -a /home/memo/ /backup/memo/                # "archive" mode. e.g keep the same
rsync -a /var/ /var_bak/
rsync -aR --delete-during /home/user/ /backup/      # use relative (see below)
/opt/local/bin/rsync -azv --iconv=UTF-8-MAC,UTF-8 ~/Music/flac/ me@server:/dst/
                           # convert filenames OSX UTF8 to Windows UTF8

{% endhighlight %}


Same as before but over the network and with compression. Rsync uses SSH for the transport per default and will use the ssh key if they are set. Use ":" as with SCP. A typical remote copy:

{% highlight bash %}

rsync -axSRzv /home/user/ user@server:/backup/user/ # Copy to remote
rsync -a 'user@server:My\ Documents' My\ Documents  # Quote AND escape spaces for the remote shell

{% endhighlight %}


Exclude any directory tmp within /home/user/ and keep the relative folders hierarchy, that is the remote directory will have the structure /backup/home/user/. This is typically used for backups.

{% highlight bash %}
rsync -azR --exclude=tmp/ /home/user/ user@server:/backup/
{% endhighlight %}

Use port 20022 for the ssh connection:
{% highlight bash %}
rsync -az -e 'ssh -p 20022' /home/memo/ user@server:/backup/memo/
{% endhighlight %}

Using the rsync daemon (used with "::") is much faster, but not encrypted over ssh. The location of /backup is defined by the configuration in /etc/rsyncd.conf. The variable RSYNC_PASSWORD can be set to avoid the need to enter the password manually.

{% highlight bash %}
rsync -axSRz /home/ ruser@hostname::rmodule/backup/
rsync -axSRz ruser@hostname::rmodule/backup/ /home/    # To copy back
{% endhighlight %}
Some important options:

{% highlight bash %}

-a, --archive       archive mode; same as -rlptgoD (no -H)
-r, --recursive       recurse into directories
-R, --relative       use relative path names
-H, --hard-links       preserve hard links
-S, --sparse       handle sparse files efficiently
-x, --one-file-system       dont cross file system boundaries
--exclude=PATTERN       exclude files matching PATTERN
--delete-during       receiver deletes during xfer, not before
--delete-after       receiver deletes after transfer, not before
{% endhighlight %}